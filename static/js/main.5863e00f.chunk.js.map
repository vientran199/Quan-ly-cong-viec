{"version":3,"sources":["components/TaskForm.js","components/TaskSearchControl.js","components/TaskSortControl.js","components/TaskControl.js","components/TaskItem.js","components/TaskList.js","App.js","serviceWorker.js","index.js"],"names":["TaskForm","props","closeForm","onCloseForm","onChange","event","target","name","value","setState","onSubmit","preventDefault","state","onClear","id","status","this","task","nextProps","className","onClick","type","Component","TaskSearchControl","onSearch","keyword","placeholder","TaskSortControl","sortBy","sortValue","onSort","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","role","TaskControl","TaskItem","onUpdateStatus","onDelete","onUpdate","index","TaskList","onFilter","filterName","filterStatus","tasks","elementTasks","map","key","App","findIndex","result","forEach","openAddJob","isDisplayForm","taskEditing","data","generateID","push","localStorage","setItem","JSON","stringify","_","splice","parseInt","console","log","filter","keyWord","getItem","parse","Math","floor","random","toString","substring","s4","toLowerCase","indexOf","sort","a","b","elementForm","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5863e00f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass TaskForm extends Component {\r\n\r\n  //Dung state để lưu trữ dư liệu của các controls\r\n  constructor(props){\r\n    super(props);\r\n    this.state ={\r\n      id : '',\r\n      name : '',\r\n      status : false\r\n    }\r\n  }\r\n\r\n  componentWillMount(){  //Khi component nay dc chay thi ham nay se chay dau tien\r\n    if(this.props.task){\r\n      this.setState({\r\n        id : this.props.task.id,\r\n        name : this.props.task.name,\r\n        status : this.props.task.status\r\n      })\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps){\r\n    if(nextProps && nextProps.task){\r\n      this.setState({\r\n        id : nextProps.task.id,\r\n        name : nextProps.task.name,\r\n        status : nextProps.task.status\r\n      })\r\n    }\r\n  }\r\n  closeForm = () =>{\r\n    this.props.onCloseForm();\r\n  }\r\n\r\n  onChange = (event) => {\r\n    var target =  event.target;\r\n    var name = target.name;\r\n    var value = target.value;\r\n    if(name === 'status'){\r\n      value = target.value ==='true' ? true : false;\r\n    }\r\n    this.setState({\r\n      [name] : value\r\n    })\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault(); // Bỏ load lại trang khi submit\r\n    // this.props.onSubmit(this.state.name, this.state.status === 'true' ? true : false); //Truyen ra ngoai app.js. Không nên dùng cách này\r\n    this.props.onSubmit(this.state);\r\n    //sau khi submit\r\n    this.onClear();\r\n    this.closeForm();\r\n  }\r\n\r\n  onClear = () =>{\r\n    this.setState({\r\n      id : '',\r\n      name : '',\r\n      status : false\r\n    })\r\n    this.closeForm(); \r\n  }\r\n    render() {\r\n      var {id} = this.state;\r\n        return (\r\n            <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\">\r\n            <div className=\"panel panel-warning\">\r\n                <div className=\"panel-heading\">\r\n                  <h3 className=\"panel-title\">\r\n                    {id !== ''? 'Cap nhat cong viec' : 'Them cong viec'} &nbsp;\r\n                    <span className=\" text-right fas fa-times-circle \" onClick={this.onClear}></span>\r\n                  </h3>\r\n                </div>\r\n                <div className=\"panel-body\">\r\n                  {/* bắt sự kiện onSubmit thì phải có button có type là submit */}\r\n                  <form onSubmit = {this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                      <label>Ten :</label>\r\n                                                                              {/* thao tác với state trên form phải có value và onChange */}\r\n                      <input type=\"text\" className=\"form-control\" name=\"name\" value={this.state.name} onChange={this.onChange}></input>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <label>Trang thai</label>\r\n                      <select type=\"text\" className=\"form-control\" name=\"status\" value={this.state.status} onChange={this.onChange}>\r\n                        <option value={true}>Kich hoat</option>\r\n                        <option value={false}>An</option>\r\n                      </select><br/>\r\n                    </div>\r\n                    <div>\r\n                      <button type=\"submit\" className=\"btn btn-warning\"><i className=\"fas fa-plus\"></i> Luu lai</button> &nbsp;\r\n                      <button type=\"button\" className=\"btn btn-danger\" onClick = {this.onClear}><i className=\"fas fa-times\" ></i> Huy bo</button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskForm;","import React, { Component } from 'react';\r\n\r\nclass TaskSearchControl extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      keyword : ''\r\n    }\r\n  }\r\n  onChange=(event)=>{\r\n    var target = event.target;\r\n    var name = target.name;\r\n    var value = target.value;\r\n    \r\n    this.setState({\r\n      [name] : value\r\n    })\r\n  }\r\n  onSearch = ()=>{\r\n    this.props.onSearch(this.state.keyword);\r\n  }\r\n    render() {\r\n      var {keyword} = this.state;\r\n        return (\r\n            <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                <div className=\"input-group\">\r\n                  <input \r\n                    type=\"text\"\r\n                    name=\"keyword\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Nhap tu khoa...\"\r\n                    value={keyword}\r\n                    onChange = {this.onChange}\r\n\r\n                  ></input>\r\n                  <span className=\"input-group-btn\">\r\n                    <button \r\n                      className=\"btn btn-primary\" \r\n                      type=\"button\"\r\n                      onClick = {this.onSearch}\r\n                    >\r\n                      <i className=\"fas fa-search mr-5\"></i> Tim\r\n                    </button>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskSearchControl;","import React, { Component } from 'react';\r\n\r\nclass TaskSortControl extends Component {\r\n  onClick = (sortBy,sortValue)=>{\r\n   \r\n    this.props.onSort(sortBy,sortValue);\r\n  }\r\n    render() {\r\n        var {sortBy,sortValue} = this.props;\r\n        return (\r\n            <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                <div className=\"dropdown\">\r\n                  <button\r\n                    className=\"btn btn-primary dropdown-toggle\"\r\n                    type=\"button\"\r\n                    id=\"dropdownMenu1\"\r\n                    data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded=\"true\"\r\n                  >\r\n                    Sap xep  <i className=\"far fa-caret-square-down\"></i>\r\n                  </button>\r\n                  <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n                    <li onClick = {()=> this.onClick('name',1)}>\r\n                      <a \r\n                        role=\"button\" \r\n                         className={(sortBy === \"name\" && sortValue === 1) ? \"sort-selected\" : \"\" }\r\n                      >\r\n                        <i className=\"fas fa-sort-alpha-down mr-5\"></i> \r\n                        Ten A-Z\r\n                      </a>\r\n                    </li>\r\n                    <li onClick = {()=> this.onClick('name',-1)}>\r\n                      <a \r\n                        role=\"button\" \r\n                        className={(sortBy === \"name\" && sortValue === -1) ? \"sort-selected\" : \"\" }\r\n                      >\r\n                      <i className=\"fas fa-sort-alpha-down-alt mr-5\"></i> \r\n                        Ten Z-A\r\n                      </a>\r\n                    </li>\r\n                    <li role=\"separator\" className=\"divider\"></li>\r\n                    <li onClick = {()=> this.onClick('status',1)}>\r\n                      <a role=\"button\" className={(sortBy === \"status\" && sortValue === 1) ? \"sort-selected\" : \"\" }>Trang thai kich hoat</a>\r\n                    </li>\r\n                    <li onClick = {()=> this.onClick('status',-1)}>\r\n                      <a role=\"button\" className={(sortBy === \"status\" && sortValue === -1) ? \"sort-selected\" : \"\" }>Trang thai an</a>\r\n                    </li>\r\n                  </ul>\r\n                </div>               \r\n              </div> \r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskSortControl;","import React, { Component } from 'react';\r\nimport TaskSearchControl from './TaskSearchControl';\r\nimport TaskSortControl from './TaskSortControl';\r\n\r\nclass TaskControl extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row mt-15\"> \r\n              <TaskSearchControl onSearch={this.props.onSearch}/>\r\n              <TaskSortControl onSort={this.props.onSort} sortBy = {this.props.sortBy} sortValue={this.props.sortValue}/> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskControl;","import React, { Component } from 'react';\r\n\r\nclass TaskItem extends Component {\r\n\r\n    onUpdateStatus = () => {\r\n        //console.log(this.props.tasks.id);\r\n        this.props.onUpdateStatus(this.props.task.id); // truyen ra cho then cha la taskList\r\n    }\r\n\r\n    onDelete = ()=>{\r\n        this.props.onDelete(this.props.task.id);\r\n    }\r\n    onUpdate = ()=>{\r\n        this.props.onUpdate(this.props.task.id);\r\n    }\r\n\r\n    render() {\r\n\r\n        var {task , index} = this.props;\r\n       \r\n        return (\r\n            <tr>\r\n                <td>{index + 1}</td>\r\n                <td>{task.name}</td>\r\n                <td className=\"text-center\">\r\n                    <span className={task.status ? \"label label-success\" : \"label label-danger\"}  onClick = {this.onUpdateStatus}>\r\n                        {task.status ? \"Kich hoat\" : \"an\"}\r\n                        </span>\r\n                </td>\r\n                <td className=\"text-center\">\r\n                    <button type=\"button\" className=\"btn btn-warning\" onClick={this.onUpdate}><i className=\"fas fa-pencil-alt mr-5\"></i>Sua</button>&nbsp;\r\n                    <button type=\"button\" className=\"btn btn-danger\" onClick = {this.onDelete}><i className=\"fas fa-trash-alt mr-5\"></i>Xoa</button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskItem;","import React, { Component } from 'react';\r\nimport TaskItem from './TaskItem';\r\n\r\nclass TaskList extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        filterName: \"\",\r\n        filterStatus: -1  //all : -1, kich hoat: 1, an : 0\r\n      }\r\n    }\r\n\r\n    onChange = (event) =>{\r\n      var target = event.target;\r\n      var name = target.name;\r\n      var value = target.value;\r\n      this.props.onFilter(name === 'filterName' ? value : this.state.filterName,\r\n                          name === 'filterStatus' ? value : this.state.filterStatus\r\n                          )\r\n      this.setState({\r\n        [name] : value\r\n      });\r\n\r\n    }\r\n    render() {\r\n\r\n      var {tasks} = this.props;  // var tasks = this.props.tasks;\r\n      var {filterName, filterStatus} = this.state;\r\n      var elementTasks = tasks.map((task,index) => {\r\n        return <TaskItem key={task.id} index={index} task ={task} onUpdateStatus = {this.props.onUpdateStatus} onDelete = {this.props.onDelete} onUpdate={this.props.onUpdate}/>;\r\n      })\r\n        return (\r\n            <div className=\"row mt-15\">\r\n              \r\n              <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n                <table className=\"table table-bordered table-hover\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th className=\"text-center\">STT</th>\r\n                      <th className=\"text-center\">Ten</th>\r\n                      <th className=\"text-center\">Trang thai</th>\r\n                      <th className=\"text-center\">Hanh dong</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td></td>\r\n                      <td>\r\n                        <input type=\"text\" className=\"form-control\"\r\n                               name=\"filterName\"\r\n                               value={filterName}\r\n                               onChange = {this.onChange}\r\n                        ></input>\r\n                      </td>\r\n                      <td>\r\n                        <select className=\"form-control\"\r\n                                name=\"filterStatus\"\r\n                                value={filterStatus}\r\n                                onChange={this.onChange}\r\n                        >\r\n                          <option value=\"-1\">Tat ca</option>\r\n                          <option value=\"0\">An</option>\r\n                          <option value=\"1\">Kich hoat</option>\r\n                        </select>\r\n                      </td>\r\n                      <td></td>\r\n                    </tr>\r\n\r\n                    {elementTasks}\r\n\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskList;","\r\nimport React, { Component } from 'react';\r\nimport './App.css';\r\nimport TaskForm from './components/TaskForm';\r\nimport TaskControl from './components/TaskControl';\r\nimport TaskList from './components/TaskList';\r\nimport _ from 'lodash';\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tasks : [],  // Id: unique, status, name \r\n      isDisplayForm : false,\r\n      taskEditing : null,\r\n      filter : {\r\n        name : '',\r\n        status : -1\r\n      },\r\n      keyWord : '',\r\n      sortBy : 'name',\r\n      sortValue : 1\r\n    }\r\n  }\r\n\r\n  // Hàm này chỉ được gọi duy nhất 1 lần khi cac component được gán lên trang web\r\n  componentWillMount(){\r\n\r\n    //NÊN  Kiểm tra khác null khác rỗng\r\n    if(localStorage && localStorage.getItem('tasks')){\r\n      var tasks = JSON.parse(localStorage.getItem('tasks'));  //json.parse() : để chuyển chuỗi thành kiểu đối tượng\r\n      this.setState({\r\n        tasks : tasks\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // Random 1 chuoi so\r\n  s4(){\r\n    return Math.floor((1 + Math.random()) * 0x10000).toString(6).substring(1);\r\n  }\r\n\r\n  generateID(){\r\n    return this.s4() + this.s4() + '-' + this.s4() + \"-\" + this.s4() +\"-\" + this.s4() +\"-\" + this.s4() + this.s4() + this.s4();\r\n  }\r\n\r\n  //tim index cua state co id\r\n  findIndex = (id) =>{\r\n    var {tasks} = this.state;\r\n    var result = -1;\r\n    tasks.forEach((task,index) => {\r\n      if(task.id === id){\r\n        result = index; \r\n      }\r\n    })\r\n    return result;\r\n  }\r\n\r\n  // function cho nút thêm công việc\r\n\r\n  openAddJob = ()=>{\r\n    this.setState({\r\n      isDisplayForm : true\r\n    })\r\n  }\r\n\r\n  onCloseForm=()=>{\r\n    this.setState({\r\n      isDisplayForm : false,\r\n      taskEditing : null\r\n    })\r\n  }\r\n\r\n  onSubmit = (data) =>{\r\n    var {tasks} = this.state;\r\n    var index = this.findIndex(data.id);\r\n    if(index === -1){\r\n      data.id = this.generateID();\r\n      tasks.push(data);\r\n    }\r\n    else{\r\n      tasks[index] = data;\r\n    }\r\n    this.setState({\r\n      tasks : tasks,\r\n      taskEditing : null\r\n    })\r\n    localStorage.setItem('tasks', JSON.stringify(tasks)); // luu vao localStorage. //Json.stringjfy() : chuyển object thành string\r\n  }\r\n\r\n  onUpdateStatus = (id)=>{\r\n    //var index = this.findIndex(id);\r\n    var {tasks} = this.state;\r\n    var index = _.findIndex(tasks,(task) => {\r\n      return task.id === id;\r\n    })\r\n    if(index !== -1){\r\n      tasks[index].status = !tasks[index].status;\r\n      this.setState({\r\n        tasks : tasks\r\n      })\r\n      localStorage.setItem('tasks',JSON.stringify(tasks));\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  onDelete = (id)=>{\r\n    var index = this.findIndex(id);\r\n\r\n    var {tasks} = this.state;\r\n    if(index !== -1){\r\n      tasks.splice(index,1);\r\n      this.setState({\r\n        tasks : tasks\r\n      })\r\n\r\n      localStorage.setItem('tasks',JSON.stringify(tasks));\r\n    }\r\n    this.onCloseForm();\r\n  }\r\n\r\n  onUpdate = (id)=>{\r\n    var {tasks} = this.state;\r\n    var index = this.findIndex(id);\r\n    var taskEditing = tasks[index];\r\n    this.setState({\r\n      taskEditing : taskEditing\r\n    })\r\n    //co state cua job\r\n    this.openAddJob();\r\n  }\r\n\r\n  onFilter = (filterName,filterStatus)=>{  \r\n    filterStatus = parseInt(filterStatus,10);\r\n    console.log(filterStatus);\r\n    this.setState({\r\n      filter : {\r\n        name : filterName,\r\n        status : filterStatus\r\n      }\r\n    })\r\n  }\r\n  onSearch = (keyWord) =>{\r\n    this.setState({\r\n      keyWord : keyWord\r\n    })\r\n  }\r\n\r\n  onSort =(sortBy,sortValue)=>{\r\n    this.setState({\r\n      sortBy : sortBy,\r\n      sortValue: sortValue\r\n    })\r\n  }\r\n  render() {\r\n\r\n    var {tasks, isDisplayForm,taskEditing,filter,keyWord ,sortBy,sortValue} = this.state; // tuong duong var tasks = this.state.tasks;\r\n    if(filter){\r\n      if(filter.name){\r\n        // tasks = tasks.filter((task)=>{\r\n        //   return task.name.toLowerCase().indexOf(filter.name) !== -1;\r\n        // })\r\n        tasks = _.filter(tasks,(task) => {\r\n          return task.name.toLowerCase().indexOf(filter.name) !== -1;\r\n        })\r\n      }\r\n        tasks = tasks.filter((task)=>{\r\n          if(filter.status === -1){\r\n            return task;\r\n          }\r\n          else{\r\n            return task.status === filter.status;\r\n          }\r\n        })\r\n    }\r\n    if(keyWord){\r\n      tasks = tasks.filter((task) => {\r\n        return task.name.toLowerCase().indexOf(keyWord) !== -1;\r\n      })\r\n    }\r\n    if(sortBy === 'name'){\r\n      tasks.sort((a,b) => {\r\n        if(a.name > b.name) return sortValue;\r\n        else if(a.name < b.name) return -sortValue;\r\n        else return 0;\r\n      });\r\n    }\r\n    else{\r\n      tasks.sort((a,b) => {\r\n        if(a.name > b.name) return sortValue;\r\n        else if(a.name < b.name) return -sortValue;\r\n        else return 0;\r\n      });\r\n    }\r\n    var elementForm = isDisplayForm ? <TaskForm onSubmit = {this.onSubmit} onCloseForm={this.onCloseForm} task = {taskEditing}/> : \"\";\r\n    return (\r\n\r\n      \r\n      <div className=\"container\">\r\n        <div className=\"text-center\">\r\n          <h1>Quan ly cong viec</h1>\r\n          <hr/>\r\n        </div>\r\n        <div className=\"row\">    \r\n        {/* Form them coong viecj */}   \r\n           {elementForm}\r\n          \r\n          <div className={isDisplayForm ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\" : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"}>\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={this.openAddJob}><i className=\"fas fa-plus mr-5\"></i> Them cong viec</button>\r\n            {/* Tim kiem va sort */}\r\n            <TaskControl onSearch = { this.onSearch } onSort = {this.onSort} sortBy = {sortBy} sortValue= {sortValue}/>\r\n            {/* Danh sach cac cong viec */}\r\n            <TaskList tasks = {tasks} onUpdateStatus = {this.onUpdateStatus} onDelete = {this.onDelete} onUpdate={this.onUpdate} onFilter={this.onFilter}/>\r\n          </div>         \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}